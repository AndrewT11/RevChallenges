<!-- 
 Challenge VII
Create a Visualforce page that displays an Account based off of user input.

Challenge IX
Create a Visualforce page that displays all Accounts in the system and all their related Contact Names in the same table. The Contact names should be separated by a comma and a space. 
-->

<apex:page controller="AccountSearchController">
    <apex:form>
        <apex:pageBlock title="Account Search">
            <apex:pageBlockSection>
                <apex:inputText value="{!accountId}" label="Enter Account ID" />
                <apex:commandButton value="Search" action="{!searchAccount}" reRender="accountDetails, messages" />
            </apex:pageBlockSection>
            <apex:messages id="messages" />
            <apex:outputPanel id="accountDetails">
                <apex:pageBlockSection title="Account Details" rendered="{!NOT(ISBLANK(acc.Id))}">
                    <apex:outputField value="{!acc.Id}" />
                    <apex:outputField value="{!acc.Name}" />
                    <apex:outputField value="{!acc.Type}" />
                    <apex:outputField value="{!acc.Industry}" />
                    <apex:outputField value="{!acc.Phone}" />
                    <apex:outputField value="{!acc.CurrencyIsoCode}" />
                </apex:pageBlockSection>

                <!--Challenge VIII
Add to your Visualforce page the functionality to display all related Contacts of the Account as an unformatted list of names. -->
                <apex:pageBlockSection title="Related Contacts">
                    <apex:repeat value="{!contacts}" var="contact">
                        <li>{!contact.Name}</li>
                    </apex:repeat>
                </apex:pageBlockSection>
            </apex:outputPanel>
        </apex:pageBlock>
    </apex:form>
</apex:page>